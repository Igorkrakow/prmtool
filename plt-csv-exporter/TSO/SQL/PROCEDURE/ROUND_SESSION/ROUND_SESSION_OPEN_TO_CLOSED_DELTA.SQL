CREATE or replace PROCEDURE TXSTORE.TSO_ROUND_SESSION_OPEN_TO_CLOSED_DELTA(start_time TIMESTAMP, end_time TIMESTAMP)
    LANGUAGE SQL
BEGIN
    DECLARE SQLCODE INT DEFAULT 0;
    DECLARE V_SQLCODE INT DEFAULT 0;

    DECLARE V_WAGER_LOTTERY_TX_HEADER_ID BIGINT;
    DECLARE V_PLAYER BIGINT;
    DECLARE V_GLOBAL_TRANS_ID VARCHAR(50);
    DECLARE V_PRODUCT SMALLINT;
    DECLARE V_TRANSACTION_TIME_LOCAL TIMESTAMP;
    DECLARE V_UUID VARCHAR(200);
    DECLARE V_DRAWCLOSETIME TIMESTAMP;
    DECLARE V_GAME_NAME VARCHAR(100);
    DECLARE V_TRANSACTION_AMOUNT BIGINT;
    DECLARE V_TRANSACTION_AMOUNT_VALIDATION BIGINT;
    DECLARE V_TRANSACTION_TIME_LOCAL_VALIDATION TIMESTAMP;

    DECLARE V_OLD_AMOUNT BIGINT;
    DECLARE V_END_DRAW_NUMBER integer;
    declare V_LAST_CLOSED INTEGER;

    DECLARE V_COUNT_COMMIT BIGINT;


    DECLARE MIGRATED_TX_CURSOR CURSOR WITH HOLD FOR
        SELECT
            LHW.LOTTERY_TX_HEADER_ID,
            THW.PLAYER_ID EXTERNAL_ID,
            LHW.GLOBAL_TRANS_ID gamesession_id,
            LHW.PRODUCT game_code,
            VARCHAR_FORMAT(LHW.TRANSACTION_TIME_LOCAL,'YYYY-MM-DD HH24:MI:SS.FF3') start_time,
            THW.UUID ext_start_transaction_id,
            GE.DRAWCLOSETIME end_time, -- The draw close time for end draw number for the wager
            GIS.DGGAME.NAME GAME_NAME,
            NVL(LHW.TRANSACTION_AMOUNT,0) tot_purchase_amount,
            SUM(NVL(LHV.TRANSACTION_AMOUNT,0)) tot_winning_amount,
            CASE WHEN SUM(NVL(LHV.TRANSACTION_AMOUNT,0)) = 0 THEN null ELSE VARCHAR_FORMAT(max(LHV.TRANSACTION_TIME_LOCAL),'YYYY-MM-DD HH24:MI:SS.FF3')
                end as  last_winning_date,
            TTORS.AMOUNT,
            LHW.END_DRAW_NUMBER,
            TXSTORE.LAST_CLOSED.DRAWNUMBER

        FROM TXSTORE.LOTTERY_TX_HEADER LHW
            JOIN TXSTORE.TMP_TSO_OPEN_RAUND_SESSION TTORS ON LHW.LOTTERY_TX_HEADER_ID = TTORS.TRANSACTION_ID
                 JOIN TXSTORE.TX_HEADER THW ON LHW.LOTTERY_TX_HEADER_ID = THW.TX_HEADER_ID
                 JOIN GIS.DGGAME ON LHW.PRODUCT = GIS.DGGAME.HOSTPRODUCTNUMBER
                 JOIN GIS.DGGAMEEVENT GE ON LHW.END_DRAW_NUMBER = GE.DRAWNUMBER
            AND LHW.PRODUCT = GE.IDDGGAME
            AND LOTTERY_TRANSACTION_TYPE = 'WAGER'
            --     JOIN PAM_CMD.SMS_CONTRACT_MIGRATION cm ON cm.CONTRACT_IDENTITY = THW.PLAYER_ID
--     Closed wagers only
                 JOIN TXSTORE.LAST_CLOSED ON GIS.DGGAME.IDDGGAME = TXSTORE.LAST_CLOSED.IDDGGAME
                 left JOIN (SELECT * FROM TXSTORE.LOTTERY_TX_HEADER LTHV JOIN TXSTORE.TX_HEADER THV ON LOTTERY_TX_HEADER_ID = TX_HEADER_ID
                            WHERE LOTTERY_TRANSACTION_TYPE  = 'VALIDATION') LHV on
                (LHW.GLOBAL_TRANS_ID=LHV.GLOBAL_TRANS_ID
                    and LHW.SERIAL=LHV.SERIAL)
                or (LHW.CDC=LHV.CDC
                and LHW.SERIAL=LHV.SERIAL
                AND THW.PLAYER_ID = LHV.PLAYER_ID
                and LHW.GLOBAL_TRANS_ID!=LHV.GLOBAL_TRANS_ID)
        WHERE LHW.TRANSACTION_TIME_LOCAL >= start_time AND LHW.TRANSACTION_TIME_LOCAL < end_time
        and TTORS.STATUS = 0
        group by THW.PLAYER_ID, LHW.GLOBAL_TRANS_ID,LHW.PRODUCT,LHW.TRANSACTION_TIME_LOCAL,THW.UUID,GIS.DGGAME.NAME,LHW.TRANSACTION_AMOUNT,
                 GE.DRAWCLOSETIME,LHW.LOTTERY_TX_HEADER_ID,TTORS.AMOUNT,LHW.END_DRAW_NUMBER,TXSTORE.LAST_CLOSED.DRAWNUMBER;



    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION, NOT FOUND, SQLWARNING
        SET V_SQLCODE = SQLCODE;
    OPEN MIGRATED_TX_CURSOR;
    CALL SYSIBMADM.DBMS_OUTPUT.PUT_LINE('Open and start reading the "TSO_PURCHASE_CURSOR" cursor.');
    FETCH MIGRATED_TX_CURSOR
        INTO  V_WAGER_LOTTERY_TX_HEADER_ID,V_PLAYER,V_GLOBAL_TRANS_ID,V_PRODUCT,V_TRANSACTION_TIME_LOCAL,V_UUID,
            V_DRAWCLOSETIME,V_GAME_NAME,V_TRANSACTION_AMOUNT,
            V_TRANSACTION_AMOUNT_VALIDATION,V_TRANSACTION_TIME_LOCAL_VALIDATION,
            V_OLD_AMOUNT,V_END_DRAW_NUMBER,V_LAST_CLOSED;
    SET V_COUNT_COMMIT = 1;
    WHILE (V_SQLCODE = 0)
        DO
            IF(V_OLD_AMOUNT != V_TRANSACTION_AMOUNT_VALIDATION) THEN
                UPDATE TXSTORE.TMP_TSO_ROUND_SESSION SET TRANSACTION_AMOUNT_VALIDATION = V_OLD_AMOUNT,
                START_DATE_UPDATE = start_time, END_DATE_UPDATE = end_time, DELTA = 'u'
                where LOTTERY_TX_HEADER_ID = V_WAGER_LOTTERY_TX_HEADER_ID;

                UPDATE TXSTORE.TMP_TSO_OPEN_RAUND_SESSION SET AMOUNT = V_TRANSACTION_AMOUNT_VALIDATION
                WHERE TRANSACTION_ID = V_WAGER_LOTTERY_TX_HEADER_ID;

            end if;
            IF(V_END_DRAW_NUMBER >= V_LAST_CLOSED) THEN
                UPDATE TXSTORE.TMP_TSO_OPEN_RAUND_SESSION SET STATUS = 1
                WHERE TRANSACTION_ID = V_WAGER_LOTTERY_TX_HEADER_ID;
            end if;
            IF(V_COUNT_COMMIT = 10000) THEN
                SET V_COUNT_COMMIT = 1;
                COMMIT ;
            ELSE
                SET V_COUNT_COMMIT = V_COUNT_COMMIT + 1;
            end if;
            SET V_SQLCODE = 0;
            FETCH MIGRATED_TX_CURSOR
                INTO  V_WAGER_LOTTERY_TX_HEADER_ID,V_PLAYER,V_GLOBAL_TRANS_ID,V_PRODUCT,V_TRANSACTION_TIME_LOCAL,V_UUID,
                    V_DRAWCLOSETIME,V_GAME_NAME,V_TRANSACTION_AMOUNT,
                    V_TRANSACTION_AMOUNT_VALIDATION,V_TRANSACTION_TIME_LOCAL_VALIDATION,
                    V_OLD_AMOUNT,V_END_DRAW_NUMBER,V_LAST_CLOSED;
            IF (V_SQLCODE <> 0) THEN
                CALL SYSIBMADM.DBMS_OUTPUT.PUT_LINE(
                            'Finish reading the cursor.' || V_SQLCODE);
            END IF;
        END WHILE;
    CLOSE MIGRATED_TX_CURSOR;
    CALL SYSIBMADM.DBMS_OUTPUT.PUT_LINE('Close the "TSO_PURCHASE_CURSOR" cursor.');
END
@

