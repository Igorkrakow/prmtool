CREATE or replace PROCEDURE TXSTORE.TSO_PAYMENT_CLOSED(start_time TIMESTAMP, end_time TIMESTAMP)
    LANGUAGE SQL
BEGIN
    DECLARE SQLCODE INT DEFAULT 0;
    DECLARE V_SQLCODE INT DEFAULT 0;

    DECLARE V_LOTTERY_TX_HEADER_ID BIGINT;
    DECLARE V_PLAYER_ID BIGINT;
    DECLARE V_TRANSACTION_AMOUNT BIGINT;
    DECLARE V_TRANSACTION_TIME_LOCAL TIMESTAMP;
    DECLARE V_UUID VARCHAR (200);
    DECLARE V_PRODUCT SMALLINT;
    DECLARE V_GLOBAL_TRANS_ID VARCHAR(50);
    DECLARE V_START_DRAW_NUMBER INTEGER;

    DECLARE V_COUNT_COMMIT BIGINT;


    DECLARE MIGRATED_TX_CURSOR CURSOR WITH HOLD FOR
SELECT
    LTHW.LOTTERY_TX_HEADER_ID,
    THW.PLAYER_ID,
    NVL(VAL.TRANSACTION_AMOUNT,0),
    e.DRAWNUMBER,
    CASE WHEN VAL.TRANSACTION_TIME_LOCAL IS NULL THEN LTHW.TRANSACTION_TIME_LOCAL
         ELSE VAL.TRANSACTION_TIME_LOCAL END as date,
    CASE WHEN LTV.UUID IS NULL THEN THW.UUID
         ELSE LTV.UUID END as uuid,
    lthw.PRODUCT,
    LTHW.GLOBAL_TRANS_ID,
    start_time,
    end_time,
    start_time,
    end_time,
    'i'
FROM TXSTORE.LOTTERY_TX_HEADER LTHW
         JOIN TXSTORE.TX_HEADER THW ON THW.TX_HEADER_ID = LTHW.LOTTERY_TX_HEADER_ID
    AND LTHW.LOTTERY_TRANSACTION_TYPE = 'WAGER'
    AND LTHW.TRANSACTION_TIME_LOCAL >= start_time AND LTHW.TRANSACTION_TIME_LOCAL < end_time
-- Closed wagers only
         JOIN TXSTORE.LAST_CLOSED ON lthw.PRODUCT = TXSTORE.LAST_CLOSED.IDDGGAME
    AND END_DRAW_NUMBER <= TXSTORE.LAST_CLOSED.DRAWNUMBER
         join  gis.DGGAMEEVENT e on e.DRAWNUMBER between lthw.START_DRAW_NUMBER and lthw.END_DRAW_NUMBER and e.IDDGGAME = lthw.PRODUCT
         LEFT JOIN TXSTORE.LOTTERY_TX_HEADER  VAL ON val.LOTTERY_TRANSACTION_TYPE = 'VALIDATION' AND (
        (lthw.GLOBAL_TRANS_ID = VAL.GLOBAL_TRANS_ID AND lthw.SERIAL = VAL.SERIAL and val.START_DRAW_NUMBER = e.DRAWNUMBER) OR
        (lthw.CDC = VAL.CDC AND lthw.SERIAL = VAL.SERIAL  and val.START_DRAW_NUMBER = e.DRAWNUMBER AND lthw.GLOBAL_TRANS_ID != VAL.GLOBAL_TRANS_ID))
         left join TXSTORE.TX_HEADER LTV on VAL.LOTTERY_TX_HEADER_ID = LTV.TX_HEADER_ID;

DECLARE CONTINUE HANDLER FOR SQLEXCEPTION, NOT FOUND, SQLWARNING
        SET V_SQLCODE = SQLCODE;
OPEN MIGRATED_TX_CURSOR;
CALL SYSIBMADM.DBMS_OUTPUT.PUT_LINE('Open and start reading the "TSO_PURCHASE_CURSOR" cursor.');
FETCH MIGRATED_TX_CURSOR INTO V_LOTTERY_TX_HEADER_ID,V_PLAYER_ID,V_TRANSACTION_AMOUNT,
    V_START_DRAW_NUMBER,V_TRANSACTION_TIME_LOCAL,
    V_UUID,V_PRODUCT,V_GLOBAL_TRANS_ID;

SET V_COUNT_COMMIT = 1;
    WHILE (V_SQLCODE = 0)
        DO
        INSERT INTO TXSTORE.TMP_TSO_PAYMENT (transaction_id,
                    player_id,
                    status,
                    DRAW,
                    transaction_date,
                    uuid,
                    product,
                    amount,
                    global_trans_id,
                    start_date_run,
                    end_date_run,
                    start_date_update,
                    end_date_update,
                    delta) VALUES (V_LOTTERY_TX_HEADER_ID,V_PLAYER_ID,
                                   CASE WHEN V_TRANSACTION_AMOUNT > 0 THEN 'WINNING' ELSE 'LOSER' END,
                                   V_START_DRAW_NUMBER,V_TRANSACTION_TIME_LOCAL,V_UUID,V_PRODUCT,V_TRANSACTION_AMOUNT,
                                   V_GLOBAL_TRANS_ID,start_time,end_time,start_time,end_time,'i');

            IF(V_COUNT_COMMIT = 10000) THEN
                SET V_COUNT_COMMIT = 1;
COMMIT ;
ELSE
                SET V_COUNT_COMMIT = V_COUNT_COMMIT + 1;
end if;
            SET V_SQLCODE = 0;
        FETCH MIGRATED_TX_CURSOR INTO V_LOTTERY_TX_HEADER_ID,V_PLAYER_ID,V_TRANSACTION_AMOUNT,
            V_START_DRAW_NUMBER,V_TRANSACTION_TIME_LOCAL,
            V_UUID,V_PRODUCT,V_GLOBAL_TRANS_ID;
IF (V_SQLCODE <> 0) THEN
                CALL SYSIBMADM.DBMS_OUTPUT.PUT_LINE(
                            'Finish reading the cursor.' || V_SQLCODE);
END IF;
END WHILE;
CLOSE MIGRATED_TX_CURSOR;
CALL SYSIBMADM.DBMS_OUTPUT.PUT_LINE('Close the "TSO_PURCHASE_CURSOR" cursor.');
END
@

